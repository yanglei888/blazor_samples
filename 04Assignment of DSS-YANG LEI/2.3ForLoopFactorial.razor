@page "/0405ForLoopFactorial"

<PageTitle>Factorial</PageTitle>
<h1>Factorial</h1>
<br/>
<select id="select" class="chosen-select" data-placeholder="请选择" @onchange="selectChange" style="display:none">
    <option value="1">ForLoop</option>
    <option value="2">WhileLoop</option>
    <option value="3">DoWhileLoop</option>
</select>

<table>
    <tr>
        <td>Argument:</td>
        <td>
            <input style="text-align:right" @bind="num"/>
        </td>
    </tr>
    <tr>
        <td style="text-align:right" colspan="2">
            <button class="btn btn-primary" title="by forward counting" @onclick="FactorialByCountForward">Factorial</button> &nbsp;
            <button class="btn btn-primary" title="by backward counting" @onclick="FactorialByCountBackward">Factorial</button> &nbsp;
        </td>
    </tr>
    <tr>
        <td>@num !!:</td>
        <td><input style="text-align:right" @bind="result"/></td>
    </tr>
 </table> 
<br/>



@code {

    private int num = 0;

    private long result = 1;

    private void selectChange()
    {


    }

    private void FactorialByCountForward()
    {
        Console.WriteLine("FactorialByCountForward");
        int n = num;
        Console.WriteLine("Argument: " + n);
        if (n < 0)
        {
            Console.WriteLine("Error - argument is negative.");
            result = long.MinValue;
            return;
        }
        long fakt = 1;
        for (int i = 1; i <= n; i++)
        {
            if (DoubleFactorial(n, i))
            {
                fakt *= i;

            }
        }
        result = fakt;
        System.Console.WriteLine("Result: " + result);
        System.Console.WriteLine();
    }

    private void FactorialByCountBackward()
    {
        Console.WriteLine("FactorialByCountBackward");
        int n = num;
        Console.WriteLine("Argument: " + n);
        if (n < 0)
        {
            Console.WriteLine("Error - argument is negative.");
            result = long.MinValue;
            return;
        }
        long fakt = 1;
        for (int i = n; i >= 1; i--)
        {
            if (DoubleFactorial(n, i))
            {
                 fakt *= i;
                
            }
        }
        result = fakt;
        System.Console.WriteLine("Result: " + result);
        System.Console.WriteLine();
    }
    public bool DoubleFactorial(int n, int i)
    {
        return n % 2 == i % 2;
    }

}
